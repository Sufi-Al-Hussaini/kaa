/*
 * Copyright 2014-2015 CyberVision, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

# ifndef KAA_DEFAULTS_H_
# define KAA_DEFAULTS_H_

/**
 *
 * DO NOT EDIT THIS FILE. IT IS AUTO-GENERATED.
 *
 */

# include "kaa_common.h"

# ifdef __cplusplus
extern "C" {
# endif

# define BUILD_VERSION                  "${build_version}"
# define BUILD_COMMIT_HASH              "${build_commit_hash}"

# define APPLICATION_TOKEN              "${app_token}"

# define CONFIG_SCHEMA_VERSION          ${config_version}
# define PROFILE_SCHEMA_VERSION         ${profile_version}
# define SYSTEM_NF_SCHEMA_VERSION       ${system_nf_version}
# define USER_NF_SCHEMA_VERSION         ${user_nf_version}
# define LOG_SCHEMA_VERSION             ${log_version}

#if (! $user_verifier_token.isEmpty())
# define DEFAULT_USER_VERIFIER_TOKEN    "${user_verifier_token}"
#end

# define KAA_SYNC_TIMEOUT               60000L



typedef struct {
    const char *    name;
    uint16_t         version;
} kaa_events_schema_version_t;

#if ($eventFamilies)
#set ($familyCounter = $eventFamilies.size())
# define KAA_EVENT_SCHEMA_VERSIONS_SIZE    $familyCounter

static const kaa_events_schema_version_t KAA_EVENT_SCHEMA_VERSIONS[KAA_EVENT_SCHEMA_VERSIONS_SIZE] = {
#foreach ($family in $eventFamilies)
#set ($familyCounter = $familyCounter - 1)
    {
          /* .name = */   "${family.getEcfName()}"
        , /* .version = */${family.getVersion()}
    }#if ($familyCounter > 0),
#end
#end
};
#else
# define KAA_EVENT_SCHEMA_VERSIONS_SIZE    0

static const kaa_events_schema_version KAA_EVENT_SCHEMA_VERSIONS[KAA_EVENT_SCHEMA_VERSIONS_SIZE] = {};
#end



/**
 * @brief Uses to represent transport-specific connection data to establish
 * connection to Bootstrap servers.
 *
 * @see kaa_transport_protocol_id_t
 * @see kaa_access_point_t
 */
typedef struct {
    kaa_transport_protocol_id_t    protocol_id;
    kaa_access_point_t             access_point;
} kaa_bootstrap_server_connection_data_t;

#set ($accessPointCounter = 0)
#foreach ($node in $bootstrapNodes)
#foreach ($transport in $node.getTransports())
#set ($accessPointCounter = $accessPointCounter + $transport.getConnectionInfo().size())
#end
#end
# define KAA_BOOTSTRAP_ACCESS_POINT_COUNT    $accessPointCounter

static const kaa_bootstrap_server_connection_data_t KAA_BOOTSTRAP_ACCESS_POINTS[KAA_BOOTSTRAP_ACCESS_POINT_COUNT] =
{
#foreach ($node in $bootstrapNodes)
#set($accessPointId = $Integer.toHexString($ServerNameUtil.crc32($node.getConnectionInfo())))
#foreach ($transport in $node.getTransports())
#set($protocolId = $Integer.toHexString($transport.getId()))
#foreach ($connectionInfo in $transport.getConnectionInfo())
#set($accessPointCounter = $accessPointCounter - 1)
#set($connectionData = $connectionInfo.getConenctionInfo().array())
#set($connectionDataLength = $connectionData.size())
    {
        { 0x${protocolId}, $connectionInfo.getVersion() },
        {
            0x${accessPointId},
            $connectionDataLength,
            (char []) {
            #foreach ($b in $connectionData)
#set($connectionDataLength = $connectionDataLength - 1)
$b #if($connectionDataLength > 0), #end
#end
            }
        }
    }#if($accessPointCounter > 0),
#end
#end
#end
#end
};



#if ($configurationData && $configurationData.size() != 0)
#set($configurationDataLength = $configurationData.size())
# define KAA_CONFIGURATION_DATA_LENGTH    $configurationDataLength

static const char KAA_CONFIGURATION_DATA[KAA_CONFIGURATION_DATA_LENGTH] =
{
#foreach ($b in $configurationData)
#set($configurationDataLength = $configurationDataLength - 1)
$b #if($configurationDataLength > 0), #end
#end
};
#else
# define KAA_CONFIGURATION_DATA_LENGTH    0

static const char KAA_CONFIGURATION_DATA[KAA_CONFIGURATION_DATA_LENGTH] = {}; 
#end

# ifdef __cplusplus
} // extern "C"
# endif

# endif /* KAA_DEFAULTS_H_ */

